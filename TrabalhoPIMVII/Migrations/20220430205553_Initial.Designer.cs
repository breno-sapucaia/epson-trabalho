// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrabalhoPIMVII.DataLayer;

#nullable disable

namespace TrabalhoPIMVII.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220430205553_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoId"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BAIRRO");

                    b.Property<int>("CEP")
                        .HasColumnType("int")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.HasKey("EnderecoId");

                    b.ToTable("ENDERECO", (string)null);
                });

            modelBuilder.Entity("Domain.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PessoaId"), 1L, 1);

                    b.Property<long>("CPF")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CPF");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NOME")
                        .HasColumnOrder(2);

                    b.HasKey("PessoaId");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("PESSOA", (string)null);
                });

            modelBuilder.Entity("Domain.PessoaTelefone", b =>
                {
                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("TelefoneId")
                        .HasColumnType("int");

                    b.HasKey("PessoaId", "TelefoneId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("PESSOA_TELEFONE", (string)null);
                });

            modelBuilder.Entity("Domain.Telefone", b =>
                {
                    b.Property<int>("TelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefoneId"), 1L, 1);

                    b.Property<int>("DDD")
                        .HasColumnType("int")
                        .HasColumnName("DDD");

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int>("TipoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO");

                    b.HasKey("TelefoneId");

                    b.HasIndex("TipoId")
                        .IsUnique();

                    b.ToTable("TELEFONE", (string)null);
                });

            modelBuilder.Entity("Domain.TipoTelefone", b =>
                {
                    b.Property<int>("TipoTelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoTelefoneId"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TIPO");

                    b.HasKey("TipoTelefoneId");

                    b.ToTable("TELEFONE_TIPO", (string)null);
                });

            modelBuilder.Entity("Domain.Pessoa", b =>
                {
                    b.HasOne("Domain.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("Domain.Pessoa", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Domain.PessoaTelefone", b =>
                {
                    b.HasOne("Domain.Pessoa", "Pessoa")
                        .WithMany("PessoaTelefone")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Telefone", "Telefone")
                        .WithMany("PessoaTelefone")
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("Domain.Telefone", b =>
                {
                    b.HasOne("Domain.TipoTelefone", "Tipo")
                        .WithOne()
                        .HasForeignKey("Domain.Telefone", "TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Domain.Pessoa", b =>
                {
                    b.Navigation("PessoaTelefone");
                });

            modelBuilder.Entity("Domain.Telefone", b =>
                {
                    b.Navigation("PessoaTelefone");
                });
#pragma warning restore 612, 618
        }
    }
}
